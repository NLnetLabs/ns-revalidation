<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-07" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="June" day="24"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 127?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 134?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
</list></t>

<ul empty="true"><li>
  <t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (see <xref target="IANA"/>).</t>
</li></ul>

<t><list style="symbols">
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.</t>

<t>The higher up the DNS tree, the more impact such an attack has.
In case of non DNSSEC validating resolvers, an attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRset responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS response with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>Revalidating referral and authoritative NS RRset responses will induce more traffic from the resolver to the authoritative name servers.
A software implementation may consider to revalidate only the higher layers of the domain name space where it has the highest impact (see <xref target="impact"/>).
For example only revalidate the root NS and associated address RRsets, or only revalidate the root and the Top Level Domain (TLD) NS and associated address RRsets.
Another reason to only revalidate layers higher up the DNS tree, is because their management is likely to be a principal activity of the operators managing those layers and as a consequence, the child-side NS RRsets are likely to be of good quality.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC9567;
&RFC8914;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 298?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
ShpFvykKo9u4cZ806Pj4GazpfwFTye1mM1YAAA==

-->

</rfc>

