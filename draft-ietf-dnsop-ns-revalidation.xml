<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.7 (Ruby 2.7.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-05" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="March" day="04"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 113?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be requeried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 120?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral respons (as glue) or authoritative NS respons that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will ne directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be requeried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>)</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifyable, (because the complete RRset is included, including a verifyable signature for the RRset), such additional addresses can be cached authoritively immediatly without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoriative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 245?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9VcbW8bN7b+Pr+CcD/UBiTF8aYXXS8WqFunTdo0ae206bbo
B2qGkrieIbVDjhU1yH+/54XkcEYjJ+29uMA1EESeF/K8n+ccHnk+nxde+1pd
imtVq7X02hpxo+5lrSv+ZbkX1y9v4Zqz9b1qXSGXy1bdX9LVIy8VlS2NbGDV
qpUrP9fKr+aVcXY7N27eZk/Ozz8r4BM8eXF+8WR+/rf5+ZOi0Nv2Uvi2c/7i
/Pzv5xeF65aNdg5e8PstPPz86euvC9kqeSlebVVLSzkhTSW+l0auVaOMF1dw
v9itgVLbSG3ES6BI3O6dV032VnG3uyyEmIvnxqvWKD+/RprpErBI/0fm+WLi
OdzL+MYLV53f2FZ7uHKv6ApvrFpYAR4vbVvxZV78B+DD8H5fbXRdpR27tlTh
eXjbF6X0l8L5qrhXplNI9Lq13ZY08eoH+BW4rEHkKOcvUOQL267xKe033RJe
3XT/6dSjkQaKYqsvxW/eljPhbOtbtXLwad/gh9+LQhI7JCL4J4Q27lLcLsQz
XIyusKZvN10DZtBfhs2l0X/QJnBb1sqtLLBENxXTyiR9scbfFqVthrv8sBA/
67c63+UH2dXZxdEez5+Kp11rt2omflp8s8h32sKLX7SqWsrWBLlkO71ZiNfW
wpvZVm90XYOlZNeHu718AcYiXsilo5sOJKdAQbelVgYUB2q9E0/Oz+lmqf3+
Ulw1YHttJRu+ZivY5fH53z8XvzwLVzrjW3jwpfIb1dZgzy7nYUcUfWFq2LiG
fRemLgpj24ZM7ZIevfn6q8fnf3uS//JZ+uXi8eeP0y+fw9aX4GtmNVzh+fx6
cY8SRo9Vbz1Yi9PNtrX5Azv9b7OWsq1c9hT5yNzpSs0b7TU7Cb/zzbNXt6/D
3vjjZbtGaW2837rLR492u90CuHVzMLytdbprUEmP8NLF+eOLR/2LHK1OvtlY
53PPBi2CK9o7VYl/gV5uPQgrOK5c1uokrdAbdPyZZ5+j9r8V32pp1oM7ZCrf
Lg7uTL//4uj74ztT738HTx2+/N1iePnYzke2/cCbz8R1J83hu88W4xvT+77p
JvcNl8kELv6SCcy3EuL1ozXqfF6RzsHeaisrVc3vO/CHFnU8r7W5c3O4GZ5B
wuZVitdzcCiMfbakXz9gVDdhg0vxc9oBZAg7AGeDnJJlQUxBN2mHP2t0v6Bh
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
TkIAAA==

-->

</rfc>

