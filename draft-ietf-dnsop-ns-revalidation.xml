<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.7 (Ruby 2.7.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-05" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="March" day="04"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 112?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
Resolvers should also periodically revalidate the child delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 118?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The second recommendation is to revalidate the delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoriative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 214?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Vixie, Joffe, and Neves.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

