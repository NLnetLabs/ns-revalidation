<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC8806 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8806.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY RFC8976 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8976.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY I-D.fujiwara-dnsop-resolver-update SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.fujiwara-dnsop-resolver-update.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-07" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="June" day="27"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 137?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 144?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref section="4.2.2" sectionFormat="of" target="RFC1034"/> says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue (Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare"/> and <xref target="RFC2181" section="6.1" sectionFormat="bare"/> of <xref target="RFC2181"/>).
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>

<t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>

<t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD <xref target="IANA"/>.</t>

<t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>

<t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>

<t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>

<t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.
The higher up the DNS tree, the more impact such an attack has.
An attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRset responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

<t>Since December 6, 2023, the root zone contains a DNSSEC signed cryptographic message digest <xref target="RFC8976"/><xref target="ROOT-ZONEMD"/>, covering all root zone data.
This includes all non-authoritative data such as the A and AAAA RRsets for the IP addresses of the root server identifiers, as well as the NS RRsets and glue that make up the delegations.
A root zone local to the resolver <xref target="RFC8806"/> with a verified and validated ZONEMD RRset, would provide protection similarly strong to revalidating the root and the top level domains.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS response with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>Revalidating referral and authoritative NS RRset responses will induce more traffic from the resolver to the authoritative name servers.
A software implementation may consider to revalidate only the higher layers of the domain name space where it has the highest impact (see <xref target="impact"/>).
For example only revalidate the root NS and associated address RRsets, or only revalidate the root and the Top Level Domain (TLD) NS and associated address RRsets.
Another reason to only revalidate layers higher up the DNS tree, is because their management is likely to be a principal activity of the operators managing those layers and as a consequence, the child-side NS RRsets are likely to be of good quality.</t>

<t>Some, so called parent centric, resolvers do not adhere to Sections <xref target="RFC2181" section="5.4.1" sectionFormat="bare"/> and <xref target="RFC2181" section="6.1" sectionFormat="bare"/> of <xref target="RFC2181"/>, and only use the non-authoritative parent side NS RRsets and glue returned in referral responses for contacting authoritative name servers <xref target="I-D.fujiwara-dnsop-resolver-update"/>.
As a consequence, they are not susceptible to many of the cache poisoning attacks enumerated in <xref target="DNS-CACHE-INJECTIONS"/> that are based upon the relative trustworthiness of DNS data.
Parent centric resolvers are also not susceptible to the GHOST domain attacks <xref target="GHOST1"/>, <xref target="GHOST2"/>.
Parent centric resolvers will however never benefit from DNSSEC protection of infrastructure RRsets and are susceptible to query redirection attacks (see <xref target="impact"/>).</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC8806;
&RFC8914;
&RFC8976;
&RFC9567;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.fujiwara-dnsop-resolver-update;
&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ROOT-ZONEMD" target="https://lists.dns-oarc.net/pipermail/dns-operations/2023-December/022388.html">
  <front>
    <title>Root zone operational announcement: introducing ZONEMD for the root zone</title>
    <author initials="D." surname="Wessels" fullname="Duane Wessels">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 316?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9VcWW8bR7Z+568oaB5GCkhaUhwvurhAFEuJlTiyIznxTDID
pNhdJCtqdnG6ukUziv77nKW2XijbmcEFrgDDUi9Vp06d5TtL9WQyGdW6LtSJ
OFOFWsham1JcqVtZ6Jz/mG3F2eU1XLOmuFWVHcnZrFK3J3R1x0uj3GSlXMGo
eSXn9USrej7JS2vWk9JOquTJyeHTEfwGTx4fHj+eHD6ZHD8djfS6OhF11dj6
+PDw+eHxyDazlbYWXqi3a3j44vzt1yNZKXkiXq9VRUNZIctcfC9LuVArVdbi
FO6PNgug1KykLsUlUCSut7ZWq+St0c3mZCTERFyUtapKVU/OkGa6BEuk//3i
+WJYs7uXrBsvnDb10lS6hiu3iq7wxKqCEeDxzFQ5X+bB38A6Sp7vxVIXeZix
qTLlnoe361Em6xNh63x0q8pGIdGLyjRr2onXb+BPWGUBLEc+f4ksn5pqgU/p
etnM4NVl869GPerswGi01ifil9pkY2FNVVdqbuG37Qp/+edoJGk5xCL4J4Qu
7Ym4noqXOBhd4Z2+XjYrEIN4GSaXpf6dJoHbslB2bmBJdFMxrUzSlwv8a5qZ
VXuWN1Pxk36v01neyKZILnbmuDgX501l1mosfpx+M01nWsOLX1Yqn8mqdHxJ
Zno3FW+NgTeTqd7pogBJSa63Z7t8BcIiXsmZpZsWOKdgg64zrUrYONjWG/H4
8JBuZrrenojTFchelcsVXzM5zHJ0+PyZ+NtLd6Up6woevFT1UlUFyLNN17Ah
ir4sC5i4gHmnZTEalaZakaid0KNXX784Ovz8cfrHF+GP46NnR+GPZzB1/OPZ
4ZP4x/Ojx8kfT+Od5188eXoC+lnO27NeTM6m8+Y3vZGVdIpeOZ2ZNGtS8PDc
Le4ePqTe1/iUXq0rkw600b+VCymr3CZP8VhW52qy0rVmBeR3vnn5+vqtWxf+
1LJa4E4s63ptTx492mw2U+CknYBQr43VzQoF4BFeOj48On4UX2RLuPfN0tg6
tRogIaDm5kbl4u+w59c1bIQzCnJWqL0wQlQW/zNJfveS9a34Vsty0bpDYvjt
tHdn+P1XO9/v3hl6/zt4qv/yd9P25V0z75j2A2++FGeNLPvvvpx2bwzP+64Z
nNddJhE4/lMiMFlL8AWPFrjnk5z2HOStMDJX+eS2AV2rcI8nhS5v7ARuumeQ
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

-->

</rfc>

