<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.7 (Ruby 3.1.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-05" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="March" day="18"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 125?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 132?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t><cref anchor="_1">The other way around is also possible. A zone owner may prefer to have longer TTLs than the referral; for example root-servers.net.</cref></t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 259?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9VcbW8bN7b+rl9BeD+sDUiK403v7Xpxgbpx2rhNndZ2m26L
XoCaoSTWM6R2yLGiBPnv97yQHM5o5KS9iwtcA0HkeSEPz8tznnNIeTabTbz2
lToXl6pSK+m1NeJGPchKl/zLYicur2/hmrPVg2rcRC4WjXo4p6sHXpqUtjCy
hlHLRi79TCu/nJXG2c3MuFmTPTk7/WwCn+DJs9OzZ7PTv82efj6Z6E1zLnzT
On92evr307OJaxe1dg5e8LsNPHz14u6riWyUPBevN6qhoZyQphTfSSNXqlbG
iwu4P9muQFJbS23ENUgkbnfOqzp7a3K/PZ8IMRNXxqvGKD+7RJnpEiyR/o+L
54tpzeFetm68cNH6tW20hysPiq7wxKqBEeDxwjYlX+bBv4d1GJ7v+VpXZZqx
bQoVnoe3/aSQ/lw4X04elGkVCr1qbLshS7z+Hn6FVVagctTzF6jyuW1W+JT2
63YBr67bf7XqycACk8lGn4tfvS2mwtnGN2rp4NOuxg+/TSaSlkMqgn9CaOPO
xe1cvMTB6Apb+nbd1uAG3WWYXBr9jiaB27JSbmlhSXRTsaws0hcr/G1e2Lo/
y/dz8ZN+q/NZvpdtlV0czHH1QrxoG7tRU/Hj/Ot5PtMGXvyiUeVCNiboJZvp
zVzcWQtvZlO90VUFnpJd7892/QqcRbySC0c3HWhOgYFuC60MGA7Mei+enZ7S
zUL73bm4qMH3mlLWfM2WMMvT079/Ln5+Ga60xjfw4LXya9VU4M8uX8OWJPrC
VDBxBfPOTTWZGNvU5Grn9OjNV8+fnv7tWf7LZ+mXs6efP02/fA5Tn0OsmWV/
hKvZ5fwBNYwRq9568Ban601j8we2+nezkrIpXfYUxcjM6VLNau01Bwm/8/XL
17d3YW788bJZobbW3m/c+ZMn2+12Dqt1M3C8jXW6rdFIT/DS2enTsyfdi4xW
R1+vrfN5ZIMVIRTtvSrFP8Eutx6UFQJXLip1lEboHDr+zLLP0frfiG+0NKve
HXKVb+Z7d8bff3Xw/eGdsfe/haf2X/523r98aOYD037kzZfispVm/92X8+GN
8XnftKPzhsvkAmd/ygVmGwl4/WSFNp+VZHPwt8rKUpWzhxbioUEbzypt7t0M
boZnULBZmfB6BgGF2GcL+vUjTnUTJjgXP6UZQIcwA6ysl1OyLIgp6CbN8Eed
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

-->

</rfc>

