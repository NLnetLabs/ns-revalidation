<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-07" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="June" day="24"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 127?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 134?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
</list></t>

<ul empty="true"><li>
  <t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (see <xref target="IANA"/>).</t>
</li></ul>

<t><list style="symbols">
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="dnssec-protection-of-infrastructure-data"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.</t>

<t>The higher up the DNS tree, the more impact such an attack has.
In case of non DNSSEC validating resolvers, an attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRsets responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS response with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC9567;
&RFC8914;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 291?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
AAA=

-->

</rfc>

