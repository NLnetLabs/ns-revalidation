<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC8806 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8806.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY RFC8976 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8976.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-07" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="June" day="24"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 136?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 143?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
</list></t>

<ul empty="true"><li>
  <t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD <xref target="IANA"/>.</t>
</li></ul>

<t><list style="symbols">
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security and Privacy Considerations</name>

<section anchor="impact"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.</t>

<t>The higher up the DNS tree, the more impact such an attack has.
In case of non DNSSEC validating resolvers, an attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRset responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS response with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>
<section anchor="other-considerations"><name>Other considerations</name>
<t>Revalidating referral and authoritative NS RRset responses will induce more traffic from the resolver to the authoritative name servers.
A software implementation may consider to revalidate only the higher layers of the domain name space where it has the highest impact (see <xref target="impact"/>).
For example only revalidate the root NS and associated address RRsets, or only revalidate the root and the Top Level Domain (TLD) NS and associated address RRsets.
Another reason to only revalidate layers higher up the DNS tree, is because their management is likely to be a principal activity of the operators managing those layers and as a consequence, the child-side NS RRsets are likely to be of good quality.</t>

<t>Since December 6, 2023, the root zone contains a DNSSEC signed cryptographic message digest <xref target="RFC8976"/><xref target="ROOT-ZONEMD"/>, covering all root zone data.
This includes all non-authoritative data such as the A and AAAA RRsets for the IP addresses of the root server identifiers, as well as the NS RRsets and glue that make up the delegations.
A root zone local to the resolver <xref target="RFC8806"/> with a verified and validated ZONEMD RRset, would provide protection similarly strong to revalidating the root and the top level domains.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC8806;
&RFC8914;
&RFC8976;
&RFC9567;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ROOT-ZONEMD" target="https://lists.dns-oarc.net/pipermail/dns-operations/2023-December/022388.html">
  <front>
    <title>Root zone operational announcement: introducing ZONEMD for the root zone</title>
    <author initials="D." surname="Wessels" fullname="Duane Wessels">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 311?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

