<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.2.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC8109 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8109.xml">
<!ENTITY RFC9567 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9567.xml">
<!ENTITY RFC8914 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8914.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-07" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="June" day="24"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 127?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The (A and AAAA) address RRsets in the additional section from referral responses and authoritative NS answers for the names of the NS RRset, should similarly be re-queried and used to replace the entries with the lower trustworthiness ranking in cache.
Resolvers should also periodically revalidate the child delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>

    <note title="About This Document" removeInRFC="true">
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-dnsop-ns-revalidation/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        DNSOP Working Group mailing list (<eref target="mailto:dnsop@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/dnsop/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/dnsop/"/>.
      </t>
      <t>Source for this draft and an issue tracker can be found at
        <eref target="https://github.com/shuque/ns-revalidation"/>.</t>
    </note>


  </front>

  <middle>


<?line 134?>

<section anchor="into"><name>Introduction</name>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The address records in the additional section from the referral response (as glue) or authoritative NS response that match the names of the NS RRset should similarly be required if they are cached non-authoritatively.
The authoritative answers from those queries should replace the cached non-authoritative A and AAAA RRsets.
The second recommendation is to revalidate the delegation by re-querying the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.
Another goal is to improve DNS security.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>Similarly, a child zone owner may also choose to have longer TTLs in their delegation NS sets and address records to decrease the attack window for cache poisoning attacks.
For example, at the time of writing, root-servers.net has a TTL of 6 weeks for the root server identifier address records, where the TTL in the priming response is 6 days.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
</list></t>

<ul empty="true"><li>
  <t>When a resolver detects that the child's apex NS RRset contains different nameservers than the non-authoritative version at the parent side of the zone cut, it MAY report the mismatch using DNS Error Reporting <xref target="RFC9567"/> on the Report-Channel for the child zone, as well as on the Report-Channel for the parent zone, with an extended DNS error code of TBD (see <xref target="IANA"/>).</t>
</li></ul>

<t><list style="symbols">
  <t>Additional validation queries for the "glue" resource records of referral responses (if not already authoritatively present in cache) may be sent with the validation query for the NS RRset as well.
Positive responses will be cached authoritatively and replace the non authoritative "glue" entries.
Successive queries directed to the same zone will be directed to the authoritative values for the names of the NS RRset in the referral response.</t>
  <t>The names from the NS RRset from a validating NS query may differ from the names in NS RRset in the referral response.
Outstanding validation queries for "glue" that do not match names in the authoritative NS RRset be discarded, or they may be left running to completion.
Their result will no longer be used in queries for the zone.
Outstanding validation queries for "glue" that do match names in the authoritative NS RRset must be left running to completion.
They do not need to be re-queried after reception of the authoritative NS RRset (see <xref target="upgrade-addresses"></xref>).</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="upgrade-addresses"><name>Upgrading A and AAAA RRset Credibility</name>
<t>Authoritative responses for a zone's NS RRset at the apex can contain additional addresses.
A NS RRset validation response is such an example of such responses.
A priming response is another example of an authoritative zone's NS RRset response <xref target="RFC8109"/>.</t>

<t>Additional addresses in authoritative NS RRset responses SHOULD be validated if they are not already authoritatively in cache.
Only when such additional addresses are DNSSEC verifiable, (because the complete RRset is included, including a verifiable signature for the RRset), such additional addresses can be cached authoritatively immediately without additional validation queries.
DNSSEC validation is enough validation in those cases.
Otherwise, the addresses cannot be assumed to be complete or even authoritatively present in the same zone, and additional validation queries SHOULD be made for these addresses.</t>

<t>Note that there may be outstanding address validation queries for the names of the authoritative NS RRset (from referral address validation queries).
In those cases no new validation queries need to be made.</t>

<t>Resolvers may choose to delay the response to a triggering query until it can be verified that the answer came from a name server listening on an authoritatively acquired address for an authoritatively acquired name.
This would offer the most trustworthy responses with the least risk for forgery or eavesdropping.</t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to assign a value to the "Extended DNS Error Codes" registry <xref target="RFC8914"/>.</t>

<texttable>
      <ttcol align='left'>INFO-CODE</ttcol>
      <ttcol align='left'>Purpose</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>TBD</c>
      <c>referral NS RRset mismatch</c>
      <c>[this document]</c>
</texttable>

</section>
<section anchor="Security"><name>Security Considerations</name>

<section anchor="dnssec-protection-of-infrastructure-data"><name>DNSSEC protection of infrastructure data</name>

<t>Referral response NS RRsets and glue, and the additional addresses from authoritative NS RRset responses (such as the root priming response), are not protected with DNSSEC signatures.
An attacker that is able to alter the unsigned A and AAAA RRsets in the additional section of referral and authoritative NS RRset responses, can fool a resolver into taking addresses under the control of the attacker to be authoritative for the zone.
Such an attacker can redirect all traffic to the zone (of the referral or authoritative NS RRset response) to a rogue name server.</t>

<t>A rogue name server can view all queries from the resolver to that zone and alter all unsigned parts of responses, such as the parent side NS RRsets and glue of further referral responses.
Resolvers following referrals from a rogue name server, that do not revalidate those referral responses, can subsequently be fooled into taking addresses under the control of the attacker to be authoritative for those delegations as well.</t>

<t>The higher up the DNS tree, the more impact such an attack has.
In case of non DNSSEC validating resolvers, an attacker controlling a rogue name server for the root has potentially complete control over the entire domain name space and can alter all unsigned parts undetected.</t>

<t>Revalidating referral and authoritative NS RRsets responses enables to defend against the above described attack with DNSSEC signed infrastructure RRsets.
Unlike cache poisoning defences that leverage increase entropy to protect the transaction, revalidation of NS RRsets and addresses also provides protection against on-path attacks.</t>

</section>
<section anchor="cache-poisoning-protection"><name>Cache poisoning protection</name>

<t>In <xref target="DNS-CACHE-INJECTIONS"/> an overview is given of 18 cache poisoning attacks from which 13 can be remedied with delegation revalidation.
The paper provides recommendations for handling records in DNS response with respect to an earlier version of the idea presented in this document <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.</t>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoritative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;
&RFC8109;
&RFC9567;
&RFC8914;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="DNS-CACHE-INJECTIONS" target="https://ieeexplore.ieee.org/abstract/document/8057202">
  <front>
    <title>Internet-Wide Study of DNS Cache Injections</title>
    <author initials="A." surname="Klein" fullname="Amit Klein">
      <organization></organization>
    </author>
    <author initials="H." surname="Shulman" fullname="Haya Shulman">
      <organization></organization>
    </author>
    <author initials="M." surname="Waidner" fullname="Michael Waidner">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 291?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Paul Vixie, Rodney Joffe, and Frederico Neves.</t>

<t>The authors would like to thank Ralph Dolmans who was an early collaborator on this work, as well as the many members of the IETF DNS Operations Working Group for helpful comments and discussion.</t>

</section>
<section anchor="implementation-status"><name>Implementation status</name>

<t><strong>Note to the RFC Editor</strong>: please remove this entire appendix before publication.</t>

<t><list style="symbols">
  <t>The Knot Resolver software revalidates the priming response as part of priming the root zone since version 1.5.1 (released December 12, 2017)</t>
  <t>The Unbound resolver software has delegation revalidation as described in this document implemented since version 1.1 (released August 29, 2008).
It is enabled with a configuration option <spanx style="verb">harden-referral-path: yes</spanx> which is disabled by default.  <vspace blankLines='1'/>
"Redhat Enterprise Linux has been running Unbound with the <spanx style="verb">harden-referral-path:</spanx> option set to <spanx style="verb">yes</spanx> for years without problems", as mentioned by Paul Wouters during dnsop workgroup session at the IETF 119.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

