<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.6 (Ruby 3.1.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC1034 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2181 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wijngaards-dnsext-resolver-side-mitigation SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.wijngaards-dnsext-resolver-side-mitigation.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-dnsop-ns-revalidation-05" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="DNS Delegation Revalidation">Delegation Revalidation by DNS Resolvers</title>

    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Vixie" fullname="Paul Vixie">
      <organization>SIE Europe, U.G.</organization>
      <address>
        <email>paul@redbarn.org</email>
      </address>
    </author>
    <author initials="W." surname="Toorop" fullname="Willem Toorop">
      <organization>NLnet Labs</organization>
      <address>
        <postal>
          <street>Science Park 400</street>
          <city>Amsterdam</city>
          <code>1098 XH</code>
          <country>Netherlands</country>
        </postal>
        <email>willem@nlnetlabs.nl</email>
      </address>
    </author>

    <date year="2024" month="March" day="04"/>

    <area>Operations and Management Area</area>
    <workgroup>Domain Name System Operations</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>DNS</keyword> <keyword>Resolver</keyword> <keyword>Delegation</keyword> <keyword>Revalidation</keyword> <keyword>Authoritative</keyword> <keyword>Name Server Record</keyword> <keyword>NS</keyword> <keyword>Parent</keyword> <keyword>Child</keyword> <keyword>Resource Record Set</keyword>

    <abstract>


<?line 108?>

<t>This document recommends improved DNS <xref target="RFC1034"/> <xref target="RFC1035"/> resolver behavior with respect to the processing of Name Server (NS) resource record sets (RRset) during iterative resolution.
When following a referral response from an authoritative server to a child zone, DNS resolvers should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
Resolvers should also periodically revalidate the child delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>



    </abstract>



  </front>

  <middle>


<?line 114?>

<section anchor="into"><name>Introduction</name>

<t>RFC EDITOR: PLEASE REMOVE THIS PARAGRAPH BEFORE PUBLISHING: The source for this draft is maintained in GitHub at: <eref target="https://github.com/shuque/ns-revalidation">https://github.com/shuque/ns-revalidation</eref></t>

<t>This document recommends improved DNS resolver behavior with respect to the processing of NS record sets during iterative resolution.
The first recommendation is that resolvers, when following a referral response from an authoritative server to a child zone, should explicitly query the authoritative NS RRset at the apex of the child zone and cache this in preference to the NS RRset on the parent side of the zone cut.
The second recommendation is to revalidate the delegation by re-quering the parent zone at the expiration of the TTL of the parent side NS RRset.</t>

</section>
<section anchor="motivation"><name>Motivation</name>

<t>There is wide variability in the behavior of deployed DNS resolvers today with respect to how they process delegation records.
Some of them prefer the parent NS set, some prefer the child, and for others, what they preferentially cache depends on the dynamic state of queries and responses they have processed.
This document aims to bring more commonality and predictability by standardizing the behavior in a way that comports with the DNS protocol.</t>

<t>The delegation NS RRset at the bottom of the parent zone and the apex NS RRset in the child zone are unsynchronized in the DNS protocol.
<xref target="RFC1034"/> Section 4.2.2 says "The administrators of both zones should insure that the NS and glue RRs which mark both sides of the cut are consistent and remain so.".
But for a variety of reasons they could not be.
Officially, a child zone's apex NS RRset is authoritative and thus has a higher cache credibility than the parent's delegation NS RRset, which is non-authoritative glue <xref target="RFC2181"/>, Section 5.4.1. "Ranking data", and Section 6.1. "Zone authority").
Hence the NS RRset "below the zone cut" should immediately replace the parent's delegating NS RRset in cache when an iterative caching DNS resolver crosses a zone boundary.
However, this can only happen if (1) the resolver receives the authoritative NS RRset in the Authority section of a response from the child zone, which is not mandatory, or (2) if the resolver explicitly issues an NS RRset query to the child zone as part of its iterative resolution algorithm.
In the absence of this, it is possible for an iterative caching resolver to never learn the authoritative NS RRset for a zone, unless a downstream client of the resolver explicitly issues such an NS query, which is not something that normal enduser applications do, and thus cannot be relied upon to occur with any regularity.</t>

<t>Increasingly, there is a trend towards minimizing unnecessary data in DNS responses.
Several popular DNS implementations default to such a configuration (see "minimal-responses" in BIND and NSD).
So, they may never include the authoritative NS RRset in the Authority section of their responses.</t>

<t>A common reason that zone owners want to ensure that resolvers place the authoritative NS RRset preferentially in their cache is that the TTLs may differ between the parent and child side of the zone cut.
Some DNS Top Level Domains (TLDs) only support long fixed TTLs in their delegation NS sets.
This inhibits a child zone owner's ability to make more rapid changes to their nameserver configuration using a shorter TTL, if resolvers have no systematic mechanism to observe and cache the child NS RRset.</t>

<t>A child zone's delegation still needs to be periodically revalidated at the parent to make sure that the parent zone has not legitimately re-delegated the zone to a different set of nameservers, or even removed the delegation.
Otherwise, resolvers that refresh the TTL of a child NS RRset on subsequent queries or due to pre-fetching, may cling to those nameservers long after they have been re-delegated elsewhere.
This leads to the second recommendation in this document, "Delegation Revalidation" - Resolvers should record the TTL of the parent's delegating NS RRset, and use it to trigger a revalidation action.
Attacks exploiting lack of this revalidation have been described in <xref target="GHOST1"/>, <xref target="GHOST2"/>.</t>

</section>
<section anchor="upgrade-ns"><name>Upgrading NS RRset Credibility</name>

<t><list style="symbols">
  <t>When a referral response is received during iteration, a validation query should be sent in parallel with the resolution of the triggering query, to the delegated nameservers for the newly discovered zone cut.
Note that validating resolvers today, when following a secure referral, already need to dispatch a query to the delegated nameservers for the DNSKEY RRset, so this validation query could be sent in parallel with that DNSKEY query.</t>
  <t>A validation query consists of a query for the child's apex NS RRset, sent to the newly discovered delegation's nameservers.
Normal iterative logic applies to the processing of responses to validation queries, including storing the results in cache, trying the next server on SERVFAIL or timeout, and so on.
Positive responses to this validation query will be cached with an authoritative data ranking.
Successive queries directed to the same zone will be directed to the nameservers listed in the child's apex, due to the ranking of this answer.
If the validation query fails, the parent NS RRset will remain the one with the highest ranking and will be used for successive queries.</t>
  <t>Resolvers may choose to delay the response to the triggering query until both the triggering query and the validation query have been answered.
In practice, we expect many implementations may answer the triggering query in advance of the validation query for performance reasons.
An additional reason is that there are unfortunately a number of nameservers in the field that (incorrectly) fail to properly answer explicit queries for zone apex NS records, and thus the revalidation logic may need to be applied lazily and opportunistically to deal with them.
In cases where the delegated nameservers respond incorrectly to an NS query, the resolver should abandon this algorithm for the zone in question and fall back to using only the information from the parent's referral response.</t>
  <t>If the resolver chooses to delay the response, and there are no nameserver names in common between the child's apex NS RRset and the parent's delegation NS RRset, then the responses received from forwarding the triggering query to the parent's delegated nameservers should be discarded after validation, and this query should be forwarded again to the child's apex nameservers.</t>
</list></t>

</section>
<section anchor="revalidation"><name>Delegation Revalidation</name>

<t>The essence of this mechanism is re-validation of all delegation metadata that directly or indirectly supports an owner name in cache.
This requires a cache to remember the delegated name server names for each zone cut as received from the parent (delegating) zone's name servers, and also the TTL of that NS RRset, and the TTL of the associated DS RRset (if seen).</t>

<t>A delegation under re-validation is called a "re-validation point" and is "still valid" if its parent zone's servers still respond to an in-zone question with a referral to the re-validation point, and if that referral overlaps with the previously cached referral by at least one name server name, and the DS RRset (if seen) overlaps the previously cached DS RRset (if also seen) by at least one delegated signer.</t>

<t>If the response is not a referral or refers to a different zone than before, then the shape of the delegation hierarchy has changed.
If the response is a referral to the re-validation point but to a wholly novel NS RRset or a wholly novel DS RRset, then the authority for that zone has changed.
For clarity, this includes transitions between empty and non-empty DS RRsets.</t>

<t>If the shape of the delegation hierarchy or the authority for a zone has been found to change, then no currently cached data whose owner names are at or below that re-validation point can be used.
Such non-use can be by directed garbage collection or lazy generational garbage collection or some other method befitting the architecture of the cache.
What matters is that the cache behave as though this data was removed.</t>

<t>Since re-validation can discover changes in the shape of the delegation hierarchy it is more efficient to re-validate from the top (root) downward (to the owner name) since an upper level re-validation may obviate lower level re-validations.
What matters is that the supporting chain of delegations from the root to the owner name be demonstrably valid; further specifics are implementation details.</t>

<t>Re-validation is triggered when delegation meta-data has been cached for a period at most exceeding the delegating NS or DS (if seen) RRset TTL.
If the corresponding child zone's apex NS RRset TTL is smaller than the delegating NS RRset TTL, revalidation should happen at that interval instead.
However, resolvers should impose a sensitive minimum TTL floor they are willing to endure to avoid potential computational DoS attacks inflicted by zones with very short TTLs.</t>

<t>In normal operations this meta-data can be quickly re-validated with no further work.
However, when re-delegation or take-down occurs, a re-validating cache will discover this within one delegation TTL period, allowing the rapid expulsion of old data from the cache.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>This document includes no request to IANA.</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t><xref target="upgrade-ns">Upgrading NS RRset Credibility</xref> allows resolvers to cache and utilize the authoritative child apex NS RRset in preference to the non-authoriative parent NS RRset.
However, it is important to implement the steps described in <xref target="revalidation">Delegation Revalidation</xref> at the expiration of the parent's delegating TTL.
Otherwise, the operator of a malicious child zone, originally delegated to, but subsequently delegated away from, can cause resolvers that refresh TTLs on subsequent NS set queries, or that pre-fetch NS queries, to never learn of the redelegated zone.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC1034;
&RFC1035;
&RFC2181;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&I-D.vixie-dnsext-resimprove;
&I-D.wijngaards-dnsext-resolver-side-mitigation;
<reference anchor="GHOST1" target="https://www.ndss-symposium.org/ndss2012/">
  <front>
    <title>Ghost Domain Names: Revoked Yet Still Resolvable</title>
    <author initials="J." surname="Jiang" fullname="J Jiang">
      <organization></organization>
    </author>
    <author initials="J." surname="Liang" fullname="J Liang">
      <organization></organization>
    </author>
    <author initials="K." surname="Li" fullname="K Li">
      <organization></organization>
    </author>
    <author initials="J." surname="Li" fullname="J Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="H Duan">
      <organization></organization>
    </author>
    <author initials="J." surname="Wu" fullname="J Wu">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="GHOST2" target="https://www.ndss-symposium.org/ndss-paper/ghost-domain-reloaded-vulnerable-links-in-domain-name-delegation-and-revocation/">
  <front>
    <title>Ghost Domain Reloaded: Vulnerable Links in Domain Name Delegation and Revocation</title>
    <author initials="X." surname="Li" fullname="Xiang Li">
      <organization></organization>
    </author>
    <author initials="B." surname="Liu" fullname="Baojun Liu">
      <organization></organization>
    </author>
    <author initials="X." surname="Bai" fullname="Xuesong Bai">
      <organization></organization>
    </author>
    <author initials="M." surname="Zhang" fullname="Mingming Zhang">
      <organization></organization>
    </author>
    <author initials="Q." surname="Zhang" fullname="Qifan Zhang">
      <organization></organization>
    </author>
    <author initials="Z." surname="Li" fullname="Zhou Li">
      <organization></organization>
    </author>
    <author initials="H." surname="Duan" fullname="Haixin Duan">
      <organization></organization>
    </author>
    <author initials="Q." surname="Li" fullname="Qi Li">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<?line 212?>

<section anchor="Acknowledgements"><name>Acknowledgements</name>

<t>Wouter Wijngaards proposed explicitly obtaining authoritative child NS data in <xref target="I-D.wijngaards-dnsext-resolver-side-mitigation"/>.
This behavior has been implemented in the Unbound DNS resolver via the "harden-referral-path" option.
The combination of child NS fetch and revalidating the child delegation was originally proposed in <xref target="I-D.vixie-dnsext-resimprove"/>, by Vixie, Joffe, and Neves.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA81bbXPcNpL+zl+BmnyIVDUzlrXO1a7upSJHsqXElh2NEmeT
ygcMiZnBiiRmCVDjscv//Z5ugCTIoRxv7urqVOUyRRJAo1+efrpBzWazxGmX
qzNxoXK1lk6bUtyqB5nrzP+y3IuLmwXuWZM/qMomcrms1MMZ331kUJKZtJQF
Zs0quXIzrdxqlpXWbGelnVXRm7OTbxJc4c3Tk9Nns5O/zE6eJYneVmfCVbV1
pycnfzs5TWy9LLS1GOD2W7x8fXn3IpGVkmfizVZVPJUVsszEa1nKtSpU6cQ5
nie7NSQ1hdSluIFEYrG3ThXRqOR+d5YIMRPXpVNVqdzsgmTmW9gi/99s3t9s
9xyeRfumG+e125hKO9x5UHzHL6wqzIDXU1Nl/raf/C32Ufr1vtvoPGtXrKtU
hfcx2iWpdGfCuixJtvpM/OZMOhXWVK5SK4urfUEXvyeJZAF4U/gnhC7tmVjM
xVX9z1rxHW+bxaYuYLjutqnWstQfeCt4LHNlVwZC8EMFHeZYf0Ovf7um3+ap
KfqrvJ2Ln/V7Ha/yVtZ5dHOwxvWluKwrs1VT8dP85TxeaYuB31YqW8qqnGNY
f6V3c3FnDEZGS73TeQ7bRvf7q928gnnFK7m0/NBCcwoqXaRalVA1DHEvnp2c
8MNUu/2ZOC/gLVUmC3/PZFjl6cnf/ip+uQp36tJVePFGuY2qcnigjfewY4m+
LXMsnGPdeZknSWmqgp3jjF+9ffHd05O/PIt/+ab95fTpX5+eISDKVX/Q9exi
/kBKpbBS7x2CyupiW5n4hZ3+R7mWssps9BY78szqTM0K7bT3ZD/m5dWbxd1T
f00/TlZrUtDGua09e/Jkt9vNsUE7g69tjdV1QXZ5QrdOT56ePukGekiZvNwY
6+Lwg+EQL+ZeZeLvMMXCQT8huuQyV5N2hs6Hm59ZdN0Y/HvxvZbluveEveP7
+cGT8fGvHh0/fDI2/ge8dTj4h3n/9mMrP7LsH4y8Ehe1LA/HXs2HD8bXfVeP
rhtuswuc/ikXmG0lQPXJmmw+y9jm8LfcyExls4caIVCRjWe5Lu/tDA/DOyTY
LGtBdYYYohRhUv71D5zqNixwJn5uV4AOsQJ21gP+KFVRnrhtV/hXne4XcoxR
8/3yBeZ7Ls0/6hLvjZjh+Xxwf3T5GuECAZ7LcQn698dmeK3LdYF/4tfNqPO/
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
BDMV3xuUBr6OuYHdCdn/G1w+kjWHNQAA

-->

</rfc>

